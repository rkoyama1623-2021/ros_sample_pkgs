<launch>
  <arg name="manager" default="tf_transform_cloud_sample"/>
  <arg name="RUN_RVIZ" default="true"/>
  <!-- <arg name="PCD_FILE" default="$(find euslib)/demo/koyama/pcl/1448115440662811.pcd"/> -->
  <arg name="PCD_FILE" default="$(find my_pcl_ros_tutorial)/data/table_scene_lms400.pcd"/>

  <arg name="LASER_FLAME_ID" default="base_link" /> 
  <!-- almost same as organized_multiplane_segmentation -->
  <arg name="BASE_FRAME_ID" default="base_link" />
  <arg name="RUN_SELF_FILTER" default="false"/>
  <arg name="SELF_FILTER_PARAM" default="$(find jsk_pr2_startup)/jsk_pr2_sensors/tilt_self_filter.yaml" />
  <arg name="JOINT_STATIC_FILTER" default="false" />
  <arg name="ICP_REGISTRATION" default="false" />
  <arg name="PUBLISH_BOX_TF" default="false" />
  <arg name="ESTIMATE_OCCLUSION" default="false" />
  <arg name="HANDLE_ESTIMATOR" default="false" />
  <arg name="MACHINE" default="localhost"/>
  <arg name="SAVE_SELECTED_CLOUD" default="false" />


  <!-- manager for nodelet -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)"
        args="manager"
        output="screen"/>
  <!-- pcl source -->
  <node pkg="pcl_ros" type="pcd_to_pointcloud" name="cloud_publisher" args="$(arg PCD_FILE) 1">
    <remap from="cloud_pcd" to="cloud_source"/>
  </node>
  <!-- rviz -->
  <group if="$(arg RUN_RVIZ)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find my_pcl_ros_tutorial)/config/tf_transform_cloud_sample.rviz" />
  </group>
  <!-- voxel grid filter -->
  <node pkg="nodelet" type="nodelet"
        name="voxelgrid"
        args="load pcl/VoxelGrid $(arg manager)"
        output="screen">
    <remap from="~input" to="cloud_source"/>
    <rosparam>
      filter_limit_min: -10.0
      filter_limit_max: 10.0
      leaf_size: 0.01
    </rosparam>
  </node>
  <!-- tf_transform_cloud -->
  <!-- <node pkg="nodelet" type="nodelet" -->
  <!--       name="tf_transform_cloud" -->
  <!--       args="load jsk_pcl/TfTransformCloud $(arg manager)" -->
  <!--       output="screen"> -->
  <!--   <remap from="~input" to="voxelgrid/output" /> -->
  <!--   <remap from="~output" to="tf_transform_cloud/output_transformed" /> -->
  <!--   <rosparam> -->
  <!--     target_frame_id: "base_link" -->
  <!--   </rosparam> -->
  <!-- </node> -->
  <!-- relay for study -->
  <node pkg="nodelet" type="nodelet" name="input_relay"
        args="load jsk_topic_tools/Relay $(arg manager)">
    <remap from="~input" to="voxelgrid/output" />
    <!-- <remap from="~input" to="tf_transform_cloud/output_transformed" /> -->
  </node>
  <!-- NormalEstimationOMP -->
  <node pkg="nodelet" type="nodelet"
        args="load pcl/NormalEstimationOMP $(arg manager)"
        name="laser_normal_estimation">
    <remap from="~input" to="input_relay/output" />
    <rosparam>
      radius_search: 0
      k_search: 40
      # 0, => ANN, 1 => FLANN, 2 => Organized
      spatial_locator: 1
    </rosparam>
  </node>

  <!-- RegionGrowingMultiplePlaneSegmentation -->
  <node pkg="nodelet" type="nodelet" name="multi_plane_estimate"
        args="load jsk_pcl/RegionGrowingMultiplePlaneSegmentation $(arg manager)" >
    <remap from="~input" to="input_relay/output" />
    <remap from="~input_normal" to="laser_normal_estimation/output" />
    <remap from="~output/clustering_result" to="~output_refined"/>
    <rosparam>
      # cluster_tolerance: 0.3
      max_curvature: 0.1
    </rosparam>
  </node>











  <!-- <include file="$(find jsk_pcl_ros)/launch/organized_multi_plane_segmentation.launch"> -->
  <!--   <arg name="INPUT" value="tf_transform_cloud/output_transformed" /> -->
  <!--   <arg name="BASE_FRAME_ID" value="base_link" /> -->
  <!--   <arg name="RUN_SELF_FILTER" value="$(arg RUN_SELF_FILTER)"/> -->
  <!--   <arg name="SELF_FILTER_PARAM" value="$(arg SELF_FILTER_PARAM)" /> -->
  <!--   <arg name="JOINT_STATIC_FILTER" value="$(arg JOINT_STATIC_FILTER)" /> -->
  <!--   <arg name="ICP_REGISTRATION" value="$(arg ICP_REGISTRATION)" /> -->
  <!--   <arg name="PUBLISH_BOX_TF" value="$(arg PUBLISH_BOX_TF)" /> -->
  <!--   <arg name="LAUNCH_manager" value="false" /> -->
  <!--   <arg name="manager" default="laser_multiplane_manager" /> -->
  <!--   <arg name="ESTIMATE_OCCLUSION" value="$(arg ESTIMATE_OCCLUSION)" /> -->
  <!--   <arg name="HANDLE_ESTIMATOR" value="$(arg HANDLE_ESTIMATOR)" /> -->
  <!--   <arg name="MACHINE" value="$(arg MACHINE)"/> -->
  <!--   <arg name="SAVE_SELECTED_CLOUD" value="$(arg SAVE_SELECTED_CLOUD)" /> -->
  <!--   <arg name="ORGANIZED" value="false" /> -->
  <!-- </include> -->
</launch>
